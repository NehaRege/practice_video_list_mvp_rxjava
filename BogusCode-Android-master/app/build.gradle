apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
    buildToolsVersion "22.0.1"

    defaultConfig {
        applicationId "android.example.com.boguscode"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:cardview-v7:28.0.0'

    /*
        This is ONLY for demo - Retrofit is not used for making network request.
        It is to show how Retrofit could be used for fetching the response.
     */
    // retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2+'

    // logging interceptor and timer
    implementation 'com.squareup.okhttp3:logging-interceptor:4.2.1'
    implementation 'com.jakewharton.timber:timber:4.7.1'


    //RxJava2

    implementation "io.reactivex.rxjava2:rxjava:2+"
    implementation 'io.reactivex.rxjava2:rxandroid:2+'

    //ButterKnife

    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'


    //dagger
    implementation 'com.google.dagger:dagger:2.15'
    implementation 'com.google.dagger:dagger-android-support:2.15'
    implementation 'com.google.dagger:dagger-android:2.15'
    annotationProcessor 'com.google.dagger:dagger-android-processor:2.15'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.15'
}
